knitr::opts_chunk$set(echo = TRUE)
#library(ggstatsplot)
library(ggplot2)
setwd("/Users/aubrey/Documents/GitHub/ExplainableAI/ConferenceSubmission/Data")
pearson_ti_shap_all <- scan("pearson_ti_shap_all.csv");n1=length(pearson_ti_shap_all)
pearson_ti_shap_filtered <- scan("pearson_ti_shap_filtered.csv");n2=length(pearson_ti_shap_filtered)
pearson_ti_shap_rf = cbind.data.frame(rho = c(pearson_ti_shap_all,pearson_ti_shap_filtered), Type = c(rep("all",n1), rep("80%",n2)))
setwd("/Users/aubrey/Documents/GitHub/ExplainableAI/ConferenceSubmission/Data")
pearson_ti_shap_all <- read.csv("pearson_ti_shap_all.csv");n1=length(pearson_ti_shap_all)
pearson_ti_shap_filtered <- read.csv("pearson_ti_shap_filtered.csv");n2=length(pearson_ti_shap_filtered)
pearson_ti_shap_rf = cbind.data.frame(rho = c(pearson_ti_shap_all,pearson_ti_shap_filtered), Type = c(rep("all",n1), rep("80%",n2)))
pearson_ti_shap_all <- read.csv("pearson_ti_shap_all.csv")[,2];n1=length(pearson_ti_shap_all)
pearson_ti_shap_filtered <- read.csv("pearson_ti_shap_filtered.csv")[,2];n2=length(pearson_ti_shap_filtered)
pearson_ti_shap_rf = cbind.data.frame(rho = c(pearson_ti_shap_all,pearson_ti_shap_filtered), Type = c(rep("all",n1), rep("80%",n2)))
dRF = ggplot(pearson_ti_shap_rf,aes(x=rho, fill=Type)) + geom_density(alpha=0.25, adjust = 0.6) + ggtitle("Random Forest") + xlab( expression(paste(rho)))
dRF
setwd("/Users/aubrey/Documents/GitHub/ExplainableAI/ConferenceSubmission")
ggsave("Figures/All_Filtered_RF_Regression.pdf",dRF, width=4, height=6)
ggsave("Figures/All_Filtered_RF_Regression.pdf",dRF, width=5, height=6)
dRF
ggsave("Figures/All_Filtered_RF_Regression.pdf",dRF, width=4, height=4)
dRF = ggplot(pearson_ti_shap_rf,aes(x=rho, fill=Type)) + geom_density(alpha=0.25, adjust = 0.6) + ggtitle("Random Forest for Regression") + xlab( expression(paste(rho)))
dRF
ggsave("Figures/All_Filtered_RF_Regression.pdf",dRF, width=4, height=4)
